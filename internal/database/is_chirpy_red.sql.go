// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: is_chirpy_red.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const isChirpyRed = `-- name: IsChirpyRed :one
SELECT is_chirpy_red FROM users WHERE id = $1
`

func (q *Queries) IsChirpyRed(ctx context.Context, id uuid.UUID) (bool, error) {
	row := q.db.QueryRowContext(ctx, isChirpyRed, id)
	var is_chirpy_red bool
	err := row.Scan(&is_chirpy_red)
	return is_chirpy_red, err
}

const setIsChirpyRed = `-- name: SetIsChirpyRed :one
UPDATE users SET is_chirpy_red = $2 WHERE id = $1
RETURNING id, created_at, updated_at, email, hashed_password, is_chirpy_red
`

type SetIsChirpyRedParams struct {
	ID          uuid.UUID
	IsChirpyRed bool
}

func (q *Queries) SetIsChirpyRed(ctx context.Context, arg SetIsChirpyRedParams) (User, error) {
	row := q.db.QueryRowContext(ctx, setIsChirpyRed, arg.ID, arg.IsChirpyRed)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Email,
		&i.HashedPassword,
		&i.IsChirpyRed,
	)
	return i, err
}
